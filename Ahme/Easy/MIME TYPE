import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Solution {

    public static void main(String args[]) {
        HashMap<String,String>table= new HashMap<String,String>();
        Scanner in = new Scanner(System.in);
        int N = in.nextInt(); // Number of elements which make up the association table.
        int Q = in.nextInt(); // Number Q of file names to be analyzed.
        for (int i = 0; i < N; i++) {
            String EXT = in.next(); // file extension
            String MT = in.next(); // MIME type.
            table.put(EXT.toLowerCase(), MT);
        }
        in.nextLine();
        for (int i = 0; i < Q; i++) {
            String FNAME = in.nextLine(); // One file name per line.
           int index= FNAME.lastIndexOf(".");
            String[]split={};
           if(index!=FNAME.length()-1){
            split=FNAME.split("\\.");
           }
           else
           {
               if(FNAME.length()>1){
            split=FNAME.substring(0,FNAME.length()-2).split("\\.");
               }
           }

            if(split.length>1){
                if(table.containsKey(split[split.length-1].toLowerCase()))
                {
                    System.out.println(table.get(split[split.length-1].toLowerCase()));
                }
                else
                {
                    System.out.println("UNKNOWN");
                }
            }
            else
            {
                System.out.println("UNKNOWN");
            }
            
        }

        // Write an answer using System.out.println()
        // To debug: System.err.println("Debug messages...");


        // For each of the Q filenames, display on a line the corresponding MIME type. If there is no corresponding type, then display UNKNOWN.
       // System.out.println("UNKNOWN");
    }
}
